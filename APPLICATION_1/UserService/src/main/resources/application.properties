server.port=8081
spring.application.name=USER-SERVICE

# github properties for eureka client properties
#spring.profiles.active=dev
spring.config.import= configserver:http://localhost:8087
spring.cloud.config.enabled=true

# database properties
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=Suchi@123
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# hibernate properties
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#eureka Client Properties
#eureka.instance.prefer-ip-address = true
#eureka.client.fetch-registry = true
#eureka.client.register-with-eureka = true
#eureka.client.service-url.defaultZone = http://localhost:8761/eureka

#actuator configuration
management.health.circuitbreakers.enabled = true
management.endpoints.web.exposure.include = health
management.endpoint.health.show-details = always

#resilience4j circuit breaker configuration
resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize = 10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls = 5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled = true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState = 6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize = 10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType = COUNT_BASED

#resilience4j retry mechanism configuration
resilience4j.retry.instances.ratingHotelService.max-attempts = 3
resilience4j.retry.instances.ratingHotelService.wait-duration =  5s

#resilience4j rate limiter configuration
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period = 4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period = 2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration = 0s






